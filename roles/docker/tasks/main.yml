---
# tasks file for docker for ubuntu

- name: install required packages for Ubuntu
  package:
    name: "{{ item }}"
    state: present
  loop: ['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common', 'python-setuptools', 'python3-pip', 'python-pip']
  become: yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: add docker official gpg key
  apt_key: 
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  become: yes
  when:  ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: check fingerprint
  command: apt-key fingerprint 0EBFCD88
  register: fingerprint_result
  when:  ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  
- name: print stdout for fingerprint
  debug:
    msg: "{{fingerprint_result}}"
  when:  ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
      
- name: add docker apt repo
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/{{ansible_distribution|lower}} {{ansible_distribution_release}} stable
    state: present
  when:  ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: install docker on ubuntu
  package: 
    name: docker-ce
    state: present
  register: result
  become: yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
    
- name: restart docker if changes were made
  service:
    name: docker
    state: started
  become: yes
  when: result.changed and ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Adding user to docker group ubuntu
  user:
    name: "{{ docker_users[0] }}"
    groups: docker
    append: yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Adding user to docker group RedHat
  user:
    name: "{{ docker_users[1] }}"
    groups: docker
    append: yes
  become: yes
  when: ansible_distribution == 'RedHat'
  
# here is where to add stop container if needed

- name: cleanup docker-py to ensure no errors
  pip:
    name: docker-py
    state: absent
  become: yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: install docker container module dependencies
  pip:
    name: docker-py
    state: present
  become: yes
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
    

  # task files for installing docker on redhat

- name: install prerequesites for docker module
  dnf:
    name: "{{ item }}"
    state: present
  loop: ['python3-pip', 'python2-pip']
  become: yes
  when: ansible_distribution == 'RedHat'

- name: update dnf
  shell:
    cmd: dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
  become: yes
  when: ansible_distribution == 'RedHat'

- name: install docker-ce
  shell:
    cmd: dnf install docker-ce --nobest -y
  become: yes
  when: ansible_distribution == 'RedHat'

- name: start docker
  shell:
    cmd: systemctl start docker
  become: yes
  when: ansible_distribution == 'RedHat'

- name: enable docker
  shell:
    cmd: systemctl enable docker
  become: yes
  when: ansible_distribution == 'RedHat'

- name: using docker module to start the nginx container
  community.general.docker_container:
    name: nginx
    image: nginx
    exposed_ports: 8080:80
    state: started
  become: yes






